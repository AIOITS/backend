datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider               = "node node_modules/prisma-nestjs-graphql"
  output                 = "../src/@generated/prisma-nestjs-graphql"
  fields_Validator_from  = "class-validator"
  fields_Validator_input = true
}

model User {
  id Int @id @default(autoincrement())

  /// @Validator.IsNotEmpty()
  /// @Validator.MinLength(16)
  /// @Validator.MaxLength(16)
  nik String @unique

  /// @Validator.IsNotEmpty()
  /// @Validator.MaxLength(60)
  name String

  /// @Validator.IsEmail()
  /// @Validator.IsOptional()
  email String? @unique

  /// @Validator.IsPhoneNumber('ID', {message: 'phone must be a valid Indoesia phone number'})
  /// @Validator.IsOptional()
  phone String? @unique

  /// @Validator.IsNotEmpty()
  password String

  kuota_subsidi     Float              @default(0.0)
  saldo             Int                @default(0)
  history_pengisian HistoryPengisian[]
  ajuan_subsidi     AjuanSubsidi[]

  role      Int      @default(2)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ktp       Ktp      @relation(fields: [nik], references: [nik])
}

model HistoryPengisian {
  id                 Int               @id @default(autoincrement())
  kategori_pengisian KategoriPengisian

  nama_spbu String
  jumlah    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user_id   Int
  user      User?    @relation(fields: [user_id], references: [id])

  nomor_stnk String
  stnk       Stnk   @relation(fields: [nomor_stnk], references: [nomor_stnk])
}

model AjuanSubsidi {
  id Int @id @default(autoincrement())

  /// @Validator.IsNotEmpty()
  jumlah Int

  /// @Validator.IsNotEmpty()
  alasan String @db.Text

  /// @Validator.IsNotEmpty()
  dokumen_pendukung File[]

  /// @Validator.IsNotEmpty()
  /// @Validator.IsISO8601({ strict: true })
  /// @ApiProperty({ example: '2023-08-17' })
  tanggal_pengajuan DateTime @db.Date

  status_pengajuan StatusPengajuanSubsidi?
  createdAt        DateTime                @default(now())
  updatedAt        DateTime                @updatedAt
  user             User?                   @relation(fields: [userId], references: [id])
  userId           Int?
}

model Ktp {
  nik               String           @id @unique
  nama              String
  tempat_lahir      String
  tanggal_lahir     DateTime         @db.Date
  alamat            String
  rt                Int              @db.SmallInt
  rw                Int              @db.SmallInt
  kelurahan_desa    String
  kecamatan         String
  kabupaten_kota    String
  provinsi          String
  jenis_kelamin     JenisKelamin
  golongan_darah    GolonganDarah
  agama             Agama
  status_perkawinan StatusPerkawinan
  pekerjaan         String
  kewarganegaraan   String
  tanggal_terbit    DateTime         @db.Date

  sim  Sim[]
  stnk Stnk[]
  user User?

  @@map("KTP")
}

model Sim {
  uid              String   @unique
  nomor_sim        String   @id @unique
  jenis_sim        JenisSim
  nama             String
  alamat           String
  rt               Int      @db.SmallInt
  rw               Int      @db.SmallInt
  kelurahan_desa   String
  kecamatan        String
  kabupaten        String
  pekerjaan        String
  kabupaten_terbit String
  tanggal_terbit   DateTime @db.Date
  penerbit         String
  berlaku_sampai   DateTime @db.Date

  nik String?
  Ktp Ktp?    @relation(fields: [nik], references: [nik])

  @@map("SIM")
}

model Stnk {
  nomor_stnk             String   @id @unique
  nomor_polisi           String   @unique
  nama_pemilik           String
  nomor_bpkb             String
  alamat                 String
  bahan_bakar            String
  berlaku                DateTime @db.Date
  merk                   String
  tipe                   String
  jenis                  String
  model                  String
  tahun_pembuatan        String
  isi_silinder           String
  nomor_mesin            String
  nomor_rangka           String
  warna                  String
  warna_tnkb             String
  tahun_registrasi       String
  nomor_registrasi       String
  kode_lokasi            String
  nomor_urut_pendaftaran String

  nomor_pkb String @unique
  pkb       Pkb    @relation(fields: [nomor_pkb], references: [nomor_pkb])

  nik String?
  Ktp Ktp?    @relation(fields: [nik], references: [nik])

  history_pengisian HistoryPengisian[]

  @@map("STNK")
}

model Pkb {
  nomor_pkb                String  @id
  status_pajak             Boolean
  bbknb_pokok              Int
  bbknb_sanksi             Int
  PKB_pokok                Int
  PKB_sanksi               Int
  swdkllj_pokok            Int
  swdkllj_sanksi           Int
  administrasi_stnk_pokok  Int
  administrasi_stnk_sanksi Int
  administrasi_tnkb_pokok  Int
  administrasi_tnkb_sanksi Int

  stnk Stnk?

  @@map("PKB")
}

model File {
  id             Int           @id @default(autoincrement())
  name           String
  url            String
  AjuanSubsidi   AjuanSubsidi? @relation(fields: [ajuanSubsidiId], references: [id])
  ajuanSubsidiId Int?
}

enum KategoriPengisian {
  subsidi
  non_subsidi
}

enum StatusPengajuanSubsidi {
  diproses
  ditolak
  disetujui
}

enum GolonganDarah {
  a
  b
  ab
  o
}

enum JenisSim {
  a
  a_umum
  b1
  b2
  b2_umum
  c
  d
  e
  f
  g
  i
  x
}

enum Agama {
  islam
  kristen
  katolik
  budha
  hindu
  konghuchu
  aliran_kepercayaan
}

enum StatusPerkawinan {
  belum_kawin
  kawin
  cerai_hidup
  cerai_mati
}

enum JenisKelamin {
  laki_laki
  perempuan
  lainnya
}
